import { MigrationInterface, QueryRunner } from "typeorm";
import { PostgresConnectionOptions } from "typeorm/driver/postgres/PostgresConnectionOptions";

export class RptTables1689648547716 implements MigrationInterface {
    name = 'RptTables1689648547716'

    public async up(queryRunner: QueryRunner): Promise<void> {
        const { schema } = queryRunner.connection.options as PostgresConnectionOptions;

        // await queryRunner.query(`DROP INDEX "public"."IDX_0396f2543cf55b3c1bf44ab057"`);
        await queryRunner.query(`CREATE TYPE "${schema}"."doc-inspection-points_status_enum" AS ENUM('active', 'inactive', 'disabled', 'blocked', 'deleted', 'banned', 'draft', 'pending', 'read', 'unread', 'revision', 'suspended', 'rejected', 'processing', 'completed', 'cancelled', 'closed', 'approved')`);
        await queryRunner.query(`CREATE TABLE "${schema}"."doc-inspection-points" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "created_by" character varying(50) DEFAULT '00000000-0000-0000-0000-000000000000', "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_by" character varying(50), "deleted_at" TIMESTAMP WITH TIME ZONE, "deleted_by" character varying(50), "deleted" boolean NOT NULL DEFAULT false, "version" integer NOT NULL, "tenant_id" uuid DEFAULT '00000000-0000-0000-0000-000000000000', "code" character varying(25) NOT NULL, "entry_date" TIMESTAMP WITH TIME ZONE NOT NULL, "exit_date" TIMESTAMP WITH TIME ZONE NOT NULL, "date" TIMESTAMP WITH TIME ZONE NOT NULL, "loaded" boolean NOT NULL DEFAULT false, "plate_number" character varying(50), "driver_name" character varying(50), "status" "${schema}"."doc-inspection-points_status_enum" NOT NULL DEFAULT 'pending', CONSTRAINT "PK_${schema}_1cd72aadda82e15285f741fe741" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_d032687da0409bade339fbaa15" ON "${schema}"."doc-inspection-points" ("id", "deleted") `);
        await queryRunner.query(`CREATE INDEX "IDX_60544ca722fc4c75ca43a49c32" ON "${schema}"."doc-inspection-points" ("code", "deleted") `);
        await queryRunner.query(`CREATE TABLE "${schema}"."doc-facility-keys-control" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "created_by" character varying(50) DEFAULT '00000000-0000-0000-0000-000000000000', "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_by" character varying(50), "deleted_at" TIMESTAMP WITH TIME ZONE, "deleted_by" character varying(50), "deleted" boolean NOT NULL DEFAULT false, "version" integer NOT NULL, "tenant_id" uuid DEFAULT '00000000-0000-0000-0000-000000000000', "column_1" character varying(200), "column_2" character varying(200), "column_3" character varying(200), "column_4" character varying(200), "column_5" character varying(200), "column_6" character varying(200), "column_7" character varying(200), "column_8" character varying(200), "column_9" character varying(200), "column_10" character varying(200), "column_11" character varying(200), "column_12" character varying(200), "code" character varying(25) NOT NULL, "date" TIMESTAMP WITH TIME ZONE NOT NULL, "key_name" character varying(100), "location" character varying(200), "person_in_charge" character varying(100), "signature" text, CONSTRAINT "PK_${schema}_e461f3025bdd00ce8622eb72b55" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_9f8b9977ac01f50c7e9eb28209" ON "${schema}"."doc-facility-keys-control" ("id", "deleted") `);
        await queryRunner.query(`CREATE INDEX "IDX_422b8262aaaa012c10d01219b4" ON "${schema}"."doc-facility-keys-control" ("code", "deleted") `);
        await queryRunner.query(`CREATE TABLE "${schema}"."table-configurations" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "created_by" character varying(50) DEFAULT '00000000-0000-0000-0000-000000000000', "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_by" character varying(50), "deleted_at" TIMESTAMP WITH TIME ZONE, "deleted_by" character varying(50), "deleted" boolean NOT NULL DEFAULT false, "version" integer NOT NULL, "tenant_id" uuid DEFAULT '00000000-0000-0000-0000-000000000000', "table_name" character varying(50) NOT NULL, "table_column" character varying(50) NOT NULL, "column_label" character varying(50) NOT NULL, "hidden" boolean NOT NULL DEFAULT false, "input_type" character varying(50) NOT NULL DEFAULT 'text', "input_options" text NOT NULL DEFAULT '', CONSTRAINT "PK_${schema}_c7e4420e42f685679e7d5812fb8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_e92534f08c1d15b9c050e1824e" ON "${schema}"."table-configurations" ("id", "deleted") `);
        await queryRunner.query(`CREATE INDEX "IDX_b0623b7f9b0c8bf4fe1bf54b2e" ON "${schema}"."table-configurations" ("table_name", "deleted") `);
        // await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP COLUMN "name"`);
        // await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP COLUMN "slug"`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD "tenant_id" uuid DEFAULT '00000000-0000-0000-0000-000000000000'`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_a9fec312a0084fd0a5abedd994"`);
        // await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP CONSTRAINT "PK_ee39d2f844e458c187af0e5383f"`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD "id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD CONSTRAINT "PK_${schema}_ee39d2f844e458c187af0e5383f" PRIMARY KEY ("id")`);
        await queryRunner.query(`CREATE INDEX "IDX_a9fec312a0084fd0a5abedd994" ON "${schema}"."base" ("id", "deleted") `);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        const { schema } = queryRunner.connection.options as PostgresConnectionOptions;

        await queryRunner.query(`DROP INDEX "${schema}"."IDX_a9fec312a0084fd0a5abedd994"`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP CONSTRAINT "PK_${schema}_ee39d2f844e458c187af0e5383f"`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD CONSTRAINT "PK_${schema}_ee39d2f844e458c187af0e5383f" PRIMARY KEY ("id")`);
        await queryRunner.query(`CREATE INDEX "IDX_a9fec312a0084fd0a5abedd994" ON "${schema}"."base" ("id", "deleted") `);
        await queryRunner.query(`ALTER TABLE "${schema}"."base" DROP COLUMN "tenant_id"`);
        // await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD "slug" text`);
        // await queryRunner.query(`ALTER TABLE "${schema}"."base" ADD "name" text`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_b0623b7f9b0c8bf4fe1bf54b2e"`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_e92534f08c1d15b9c050e1824e"`);
        await queryRunner.query(`DROP TABLE "${schema}"."table-configurations"`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_422b8262aaaa012c10d01219b4"`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_9f8b9977ac01f50c7e9eb28209"`);
        await queryRunner.query(`DROP TABLE "${schema}"."doc-facility-keys-control"`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_60544ca722fc4c75ca43a49c32"`);
        await queryRunner.query(`DROP INDEX "${schema}"."IDX_d032687da0409bade339fbaa15"`);
        await queryRunner.query(`DROP TABLE "${schema}"."doc-inspection-points"`);
        await queryRunner.query(`DROP TYPE "${schema}"."doc-inspection-points_status_enum"`);
        // await queryRunner.query(`CREATE INDEX "IDX_0396f2543cf55b3c1bf44ab057" ON "base" ("slug", "deleted") `);
    }

}
